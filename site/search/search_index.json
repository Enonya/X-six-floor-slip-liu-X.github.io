{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Preface","text":""},{"location":"Chap01/1.1/","title":"1.1 Algorithms","text":""},{"location":"Chap01/1.1/#11-1","title":"1.1-1","text":"<p>Give a real-world example that requires sorting or a real-world example that requires computing a convex hull.</p> <ul> <li>Sorting: browse the price of the restaurants with ascending prices on NTU street.</li> <li>Convex hull: computing the diameter of set of points.</li> </ul>"},{"location":"Chap01/1.1/#11-2","title":"1.1-2","text":"<p>Other than speed, what other measures of efficiency might one use in a real-world setting?</p> <p>Memory efficiency and coding efficiency.</p>"},{"location":"Chap01/1.1/#11-3","title":"1.1-3","text":"<p>Select a data structure that you have seen previously, and discuss its strengths and limitations.</p> <p>Linked-list:</p> <ul> <li>Strengths: insertion and deletion.</li> <li>Limitations: random access.</li> </ul>"},{"location":"Chap01/1.1/#11-4","title":"1.1-4","text":"<p>How are the shortest-path and traveling-salesman problems given above similar? How are they different?</p> <ul> <li>Similar: finding path with shortest distance.</li> <li>Different: traveling-salesman has more constraints.</li> </ul>"},{"location":"Chap01/1.1/#11-5","title":"1.1-5","text":"<p>Come up with a real-world problem in which only the best solution will do. Then come up with one in which a solution that is \"approximately\" the best is good enough.</p> <ul> <li>Best: find the GCD of two positive integer numbers.</li> <li>Approximately: find the solution of differential equations.</li> </ul>"},{"location":"Chap01/1.2/","title":"1.2 Algorithms as a technology","text":""},{"location":"Chap01/1.2/#12-1","title":"1.2-1","text":"<p>Give an example of an application that requires algorithmic content at the application level, and discuss the function of the algorithms involved.</p> <p>Drive navigation.</p>"},{"location":"Chap01/1.2/#12-2","title":"1.2-2","text":"<p>Suppose we are comparing implementations of insertion sort and merge sort on the same machine. For inputs of size $n$ , insertion sort runs in $8n^2$ steps, while merge sort runs in $64n\\lg n$ steps. For which values of $n$ does insertion sort beat merge sort?</p> <p>$$ \\begin{aligned}     8n^2 &amp; &lt;   64n\\lg n \\\\      2^n &amp; &lt;   n^8 \\\\  2 \\le n &amp; \\le 43. \\end{aligned} $$</p>"},{"location":"Chap01/1.2/#12-3","title":"1.2-3","text":"<p>What is the smallest value of $n$ such that an algorithm whose running time is $100n^2$ runs faster than an algorithm whose running time is $2^n$ on the same machine?</p> <p>$$ \\begin{aligned} 100n^2 &amp; &lt;   2^n \\\\      n &amp; \\ge 15. \\end{aligned} $$</p>"},{"location":"Chap01/Problems/1-1/","title":"Problem 1-1","text":"<p>For each function $f(n)$ and time $t$ in the following table, determine the largest size $n$ of a problem that can be solved in time $t$, assuming that the algorithm to solve the problem takes $f(n)$ microseconds.</p> <p>$$ \\begin{array}{cccccccc}          &amp; \\text{1 second}  &amp; \\text{1 minute}    &amp; \\text{1 hour}       &amp; \\text{1 day}            &amp; \\text{1 month}          &amp; \\text{1 year}           &amp; \\text{1 century} \\\\ \\hline \\lg n    &amp; 2^{10^6}         &amp; 2^{6 \\times 10^7}  &amp; 2^{3.6 \\times 10^9} &amp; 2^{8.64 \\times 10^{10}} &amp; 2^{2.59 \\times 10^{12}} &amp; 2^{3.15 \\times 10^{13}} &amp; 2^{3.15 \\times 10^{15}} \\\\ \\sqrt n  &amp; 10^{12}          &amp; 3.6 \\times 10^{15} &amp; 1.3 \\times 10^{19}  &amp; 7.46 \\times 10^{21}     &amp; 6.72 \\times 10^{24}     &amp; 9.95 \\times 10^{26}     &amp; 9.95 \\times 10^{30} \\\\ n        &amp; 10^6             &amp; 6 \\times 10^7      &amp; 3.6 \\times 10^9     &amp; 8.64 \\times 10^{10}     &amp; 2.59 \\times 10^{12}     &amp; 3.15 \\times 10^{13}     &amp; 3.15 \\times 10^{15} \\\\ n\\lg n   &amp; 6.24 \\times 10^4 &amp; 2.8 \\times 10^6    &amp; 1.33 \\times 10^8    &amp; 2.76 \\times 10^9        &amp; 7.19 \\times 10^{10}     &amp; 7.98 \\times 10^{11}     &amp; 6.86 \\times 10^{13} \\\\ n^2      &amp; 1000             &amp; 7745               &amp; 60000               &amp; 293938                  &amp; 1609968                 &amp; 5615692                 &amp; 56156922 \\\\ n^3      &amp; 100              &amp; 391                &amp; 1532                &amp; 4420                    &amp; 13736                   &amp; 31593                   &amp; 146645 \\\\ 2^n      &amp; 19               &amp; 25                 &amp; 31                  &amp; 36                      &amp; 41                      &amp; 44                      &amp; 51 \\\\ n!       &amp; 9                &amp; 11                 &amp; 12                  &amp; 13                      &amp; 15                      &amp; 16                      &amp; 17 \\end{array} $$</p>"}]}